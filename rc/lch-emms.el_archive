(defun lch-emms-delete-file-from-disk()
  (interactive)
  (let* ((music-file (emms-track-name (emms-playlist-current-selected-track))) ;get playing music file
         (emms-stop)
         (delete-file music-file)))

  ;; FIXME
  ;; TODO:And how to inbox good ones as well.
  (defun emms-delete-file-from-disk ()
    "Delete this file from disk."
    (interactive)
    (emms-playlist-mode-go)
    (let* ((current-track (emms-track-name (emms-playlist-track-at))))
      (when (yes-or-no-p (format "Do you really want to delete \' %s \' from disk? " current-track))
        (if (string-equal current-track (emms-playlist-play-filename))
            (emms-stop))
        (emms-playlist-mode-kill-entire-track)
        (dired-delete-file current-track)
        (message (format "Have delete \' %s \' from disk." current-track)))))

  (defun emms-playlist-play-filename ()
    "Return the filename the current play."
    (cdr (assoc 'name (emms-playlist-current-selected-track))))
;;; --- EMMS 播放列表
(lazy-unset-key
 '("s" "m" "u" "M-<" "M->")
 emms-playlist-mode-map) ;卸载按键
(lazy-set-key
 '(

   ("C-y" . emms-playlist-mode-yank) ;剪切
   ("C-k" . emms-playlist-mode-kill-track) ;删除当前TRACK
   ("C-w" . emms-playlist-mode-kill) ;删除
   ("C-/" . emms-playlist-mode-undo) ;撤销
   ("J" . scroll-up-one-line) ;向上滚动一行
   ("K" . scroll-down-one-line) ;向下滚动一行
   ("." . emms-playlist-mode-first) ;浏览最上面一行
   ("," . emms-playlist-mode-last) ;浏览最下面一行
   ("C-j" . emms-playlist-mode-insert-newline) ;新建一行
   ("M-y" . emms-playlist-mode-yank-pop) ;YANK弹出
   ("M-n" . emms-playlist-mode-next) ;下一个播放列表
   ("M-p" . emms-playlist-mode-previous) ;上一个播放列表
   ("a" . emms-playlist-mode-add-contents) ;向当前播放列表添加内容

   ("C" . emms-playlist-mode-clear) ;清空当前的播放列表
   ("f" . emms-playlist-mode-play-smart) ;播放当前TRACK
   ("b" . emms-playlist-set-playlist-buffer) ;设定当前播放列表BUFFER
   ("n" . emms-next) ;播放下一首
   ("p" . emms-previous) ;播放上一首
   ("r" . emms-random) ;随机播放下一首
   (">" . emms-seek-forward) ;前进
   ("<" . emms-seek-backward) ;后退
   ("X" . emms-pause) ;暂停
   ("T" . emms-stop) ;停止
   ("q" . emms-playlist-mode-bury-buffer) ;退出
   ("?" . describe-mode) ;帮助
   ("g" . emms-playlist-mode-center-current) ;跳转到当前播放TRACK
   ("G" . emms-jump-to-file) ;定位当前音乐文件的位置
   ("D" . emms-delete-file-from-disk) ;丛磁盘删除当前的文件
   (";" . emms-tag-editor-edit-marked-tracks) ;编辑标记的TAG
   ("H" . emms-last-mark-track) ;最后一个标记
   ("L" . emms-first-mark-track) ;第一个标记
   ("N" . emms-next-mark-track) ;下一个标记
   ("P" . emms-prev-mark-track) ;上一个标记
   ("s" . one-key-menu-emms-playlist-sort) ;列表排序菜单
   ("m" . one-key-menu-emms-playlist-mark) ;列表标记菜单
   )
 emms-playlist-mode-map
 )
(lazy-set-key vi-move-key-alist emms-playlist-mode-map) ;vi-move 的局部按键
;;; ### Emms Tag Editor ###
;;; --- Emms 标签编辑器
(lazy-set-key
 '(
   ("C-c C-j" . emms-tag-editor-next-same-field) ;下一个相同的区域
   ("C-c C-k" . emms-tag-editor-prev-same-field) ;上一个相同的区域
   ("C-c C-r" . emms-tag-editor-set-all+) ;替换所有标签
   ("C-c C-l" . emms-tag-editor-set-tracknumber) ;插入轨迹序号, 要确认
   ("C-c C-i" . emms-tag-editor-set-tracknumber+) ;插入轨迹序号, 不用确认
   )
 emms-tag-editor-mode-map
 )
;;; ### EMMS Browser ###
(lazy-set-key
 '(
   ("J" . emms-browser-next-non-track) ;下一个节点
   ("K" . emms-browser-prev-non-track) ;上一个节点
   ("f" . emms-browser-toggle-subitems) ;显示
   ("s" . one-key-menu-emms-browser-search) ;搜索菜单
   ("L" . one-key-menu-emms-browser-lookup) ;查询菜单
   )
 emms-browser-mode-map
 )
(lazy-set-key vi-move-key-alist emms-browser-mode-map) ;vi-move 的局部按键
;;; ### EMMS Stream ###
;;; --- EMMS 流媒体
(lazy-set-key
 '(
   ("a" . emms-stream-add-bookmark) ;添加
   ("d" . emms-stream-delete-bookmark) ;删除
   ("E" . emms-stream-edit-bookmark) ;编辑
   ("q" . emms-stream-quit) ;退出
   ("s" . emms-stream-save-bookmarks-file) ;保存
   ("t" . emms-stream-toggle-default-action) ;切换
   ("i" . emms-stream-info-bookmark) ;信息
   ("f" . emms-stream-play) ;播放
   )
 emms-stream-mode-map
 )
(lazy-set-key vi-move-key-alist emms-stream-mode-map) ;vi-move 的局部按键


(lazy-set-key
 '(
   ("C-c p" . one-key-menu-emms) ;播放器菜单
   ("<up>" . emms-volume-mode-plus) ;增加音量
   ("<down>" . emms-volume-mode-minus) ;减少音量
   ("<left>" . emms-seek-backward) ;后退
   ("<right>" . emms-seek-forward) ;前进
   ("M-A" . emms-pause) ;暂停/播放
   ("M-X" . emms-random) ;随机播放
   ("M-Z" . emms-stop) ;停止
   ))

;; 设定 mplayer 支持的格式
(emms-player-set emms-player-mplayer 'regex
                 "\\.ogg\\|\\.mp3\\|\\.wav\\|\\.mpg\\|\\.mpeg\\|\\.wmv\\|\\.wma\\|\\.mov\\|\\.avi\\|\\.divx\\|\\.ogm\\|\\.asf\\|\\.mkv\\|http://\\|mms://\\|\\.rm\\|\\.rmvb\\|\\.mp4\\|\\.flac\\|\\.vob\\|\\.m4a\\|\\.ape\\|\\.mpc")


(add-hook 'emms-player-finished-hook 'emms-random)          ;当播放完当前的歌曲时随机选择下一首歌曲
(setq emms-playlist-default-major-mode 'emms-playlist-mode) ;设定EMMS用播放列表的主模式
(add-to-list 'emms-track-initialize-functions 'emms-info-initialize-track) ;设定音轨初始化信息
(setq emms-player-next-function 'emms-next)                                ;修复该死的播放完后的BUG
(setq emms-repeat-playlist t)                                              ;设定EMMS启动列表循环播放
(setq emms-history-start-playing t)

;;; One-key-map
(defvar one-key-menu-emms-alist nil
  "`One-Key' menu list for EMMS.")

(setq one-key-menu-emms-alist
      '(
        (("g" . "Playlist Go") . emms-playlist-mode-go)
        (("d" . "Play Directory Tree") . emms-play-directory-tree)
        (("f" . "Play File") . emms-play-file)
        (("i" . "Play Playlist") . emms-play-playlist)
        (("t" . "Add Directory Tree") . emms-add-directory-tree)
        (("c" . "Toggle Repeat Track") . emms-toggle-repeat-track)
        (("w" . "Toggle Repeat Playlist") . emms-toggle-repeat-playlist)
        (("u" . "Play Now") . emms-play-now)
        (("z" . "Show") . emms-show)
        (("s" . "Emms Streams") . emms-streams)
        (("b" . "Emms Browser") . emms-browser)))

(defun one-key-menu-emms ()
  "`One-Key' menu for EMMS."
  (interactive)
  (one-key-menu "emms" one-key-menu-emms-alist t))

(define-key global-map (kbd "<f12> <f11>") 'one-key-menu-emms)
(define-key global-map (kbd "<f5> e") 'one-key-menu-emms)

;;; Lyric
;; (ad-activate 'emms-lyrics-find-lyric)                
;; (setq emms-lyrics-dir (concat emms-dir "lyrics/"))   
;; (setq emms-lyrics-display-format "%s")               
;; (setq emms-lyrics-scroll-timer-interval 1.0)         
;; (setq emms-lyrics-display-on-minibuffer nil)
;; (setq emms-lyrics-display-on-modeline nil)

(define-key global-map (kbd "C-<f12>") 'emms-smart-browse)
(define-key global-map (kbd "S-<f12>") 'emms-playlist-mode-go)

;; FIXME: Don't know how to play fm
(define-key global-map (kbd "<f12> f") 'emms-stream-popup)                      ;; f: FM

;;; Stream
(setq emms-stream-info-format-string "NS: %s"
      emms-stream-default-action "play"
      emms-stream-popup-default-height 120)
(add-to-list 'emms-info-functions 'kid-emms-info-simple)

;;; Browser
(setq emms-browser-info-genre-format "%i● %n"
      emms-browser-info-artist-format "%i● %n"
      emms-browser-info-album-format "%i◎ %n"
      emms-browser-info-title-format "%i♪ %n")

