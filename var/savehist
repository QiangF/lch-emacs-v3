;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(grep-history emms-source-playlist-format-history erc-nick-history-list erc-server-history-list command-history coding-system-history read-expression-history regexp-history dired-regexp-history dired-shell-command-history usernames shell-command-history org-read-date-history w3m-input-url-history grep-find-history history query-replace-history face-name-history buffer-name-history minibuffer-history input-method-history file-name-history gud-gdb-history extended-command-history ido-buffer-history ido-file-history))
(setq emms-source-playlist-format-history '("native"))
(setq erc-server-history-list '("irc.freenode.net"))
(setq command-history '((switch-to-buffer "lch-conf.el") (find-file "~/Dropbox/.emacs.d/rc/lch-conf.el" t) (find-file "~/Dropbox/.emacs.d/rc/dotEmacs" t) (find-file "~/Dropbox/.emacs.d/rc/lch-env.el" t) (find-file "~/Dropbox/.emacs.d/rc/lch-elisp.el" t) (switch-to-buffer "lch-emms.el") (find-file-at-point "/Users/LooChao/Dropbox/.emacs.d/site-lisp/emms-plugins/emms-lyrics-download.el") (switch-to-buffer "lch-anything.el") (switch-to-buffer "lch-env.el") (find-file "/Users/LooChao/Dropbox/.emacs.d/rc/lch-env.el") (find-file "~/Dropbox/.emacs.d/rc/lch-binding.el" t) (find-file "~/Dropbox/.emacs.d/rc/lch-anything.el" t) (comment-region (region-beginning) (region-end) nil) (find-file "~/Dropbox/.emacs.d/rc/lch-ui-theme.el" t) (switch-to-buffer "lch-binding.el") (switch-to-buffer "lch-web.el") (switch-to-buffer "lch-web.el_archive") (find-file "/Users/LooChao/Dropbox/.emacs.d/rc/lch-web.el") (switch-to-buffer "lch-outline.el") (query-replace "ctrl" "meta" nil (if \.\.\. \.\.\.) (if \.\.\. \.\.\.)) (query-replace "ctrl-x" "ctrl" nil (if \.\.\. \.\.\.) (if \.\.\. \.\.\.)) (kill-buffer "*Compile-Log*") (switch-to-buffer "*Compile-Log*") (switch-to-buffer "lch-outline.el_archive") (find-file "/Users/LooChao/Dropbox/.emacs.d/rc/lch-outline.el_archive") (find-file "/Users/LooChao/Dropbox/.emacs.d/rc/lch-conf.el") (find-file "/Users/LooChao/Dropbox/.emacs.d/rc/lch-elisp.el") (switch-to-buffer "lch-ui.el")))
(setq coding-system-history '("gb2312-mac"))
(setq read-expression-history '("(string ?f ?o ?o)" "(make-symbol \"foo\")"))
(setq regexp-history '("ffap"))
(setq dired-regexp-history '("el$" ".*\\.el" ".*\\.gz" ".*\\.el$" ".*" "*.el$" "*"))
(setq dired-shell-command-history '("chmod 644" "grep grep"))
(setq shell-command-history '("grep var-dir" "grep emacs-var-dir" "grep live.*lib" "find . -type f |grep ." "pwd"))
(setq org-read-date-history '("   "))
(setq w3m-input-url-history '("http://www.princeton.edu/~chaol" "http://paste.lisp.org/display/133715" "http://paste.lisp.org/display/133715#1" "https://github.com/peterhil/emacs-config" "http://www.emacswiki.org/cgi-bin/wiki.pl?Command" "http://p3rl.org/IPC::System::Simple" "http://emacsformacosx.com" "http://api.t.sina.com.cn/oauth/authorize?oauth_token=5837f22c4c41b80d19b60634dd83f027" "http://orgmode.org/worg/dev" "http://orgmode.org/worg/dev/org-build-system.html" "http://orgmode.org/worg/dev/org-build-system.html#sec-4" "http://traeki.freeshell.org/files/viper-sample" "http://www.emacswiki.org/emacs/AnythingScreenshotNarrowingCandidates" "http://www.iciba.com/?s=%E7%8E%B0%E5%9C%A8" "http://www.emacswiki.org/emacs/Anything" "http://www.emacswiki.org/emacs/AnythingScreenshotAllCandidates"))
(setq grep-find-history '("find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e pp-c-l" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e lch-" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e dictionary-match-words" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e keyword" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e face" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e highlight" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e FIXME" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e weibo" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e compile" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e 'f4'" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e <f4> <f4>" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e browse" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e eldoc" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e slime" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e before-save-hook" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e clean" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e M-l" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e popwin" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e 'M-1'" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e 'C-c j'" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e byte-compile" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e '<f1> C'" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e indent-buffer" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e goto-line" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e ace-jump" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e outline-mode" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e undo" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e let" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e M-1" "find . -type f ! -regex \".*/\\({arch}\\|\\.arch-ids\\|\\.svn\\|_darcs\\|\\.bzr\\|\\.git\\|\\.hg\\)/.*\" -print0 | xargs -0 grep -nH -e 'C-c f'"))
(setq query-replace-history '("meta" "ctrl" "ctrl-x" "ui" "mode" "ctrl-c" "Ctrl-x" "Ctrl-c" "C-x" "C-c" "command" "network" "menu" "bookmark" "erc" "skeleton" "lch" "my" "f3" "f4" "Silver" "surface" "APL2" "0.4" "15" "0.3" "12" "40"))
(setq face-name-history '("w3m-tab-background" "default"))
(setq buffer-name-history '("lch-conf.el" "lch-emms.el" "lch-anything.el" "lch-env.el" "lch-binding.el" "lch-web.el" "lch-web.el_archive" "lch-outline.el" "*Compile-Log*" "lch-outline.el_archive" "lch-ui.el" "lch-binding.el_bak" "lch-elisp.el"))
(setq minibuffer-history '("" "glob" "eval-b" "co" "comme" "comm" "comment-re" "indent-re" "el-get-dir"))
(setq file-name-history '("~/.breadcrumb" "~/Dropbox/.emacs.d/rc/lch-bmk.el" "~/Dropbox/.emacs.d/rc/lch-conf.el" "~/Dropbox/.emacs.d/rc/dotEmacs" "~/Dropbox/.emacs.d/rc/lch-env.el" "~/Dropbox/.emacs.d/rc/lch-elisp.el" "~/Dropbox/.emacs.d/site-lisp/emms-plugins/emms-lyrics-download.el" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-env.el" "~/Dropbox/.emacs.d/rc/lch-binding.el" "~/Dropbox/.emacs.d/rc/lch-anything.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.emacs.d/rc/color-theme-loochao.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.emacs.d/rc/lch-color-theme.el" "~/Dropbox/.emacs.d/rc/lch-ui-theme.el" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-web.el" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-outline.el_archive" "~/Dropbox/.emacs.d/rc/lch-org.el" "~/Dropbox/.emacs.d/rc/lch-outline.el" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-conf.el" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-elisp.el" "~/Dropbox/.emacs.d/rc/lch-ui.el" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-binding.el_bak" "~/Dropbox/.emacs.d/rc/lch-coding.el" "~/Dropbox/.emacs.d/var/.bm-repository" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-ui.el" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-binding.el_archive"))
(setq gud-gdb-history '("gdb --annotate=3 duffing_euler"))
(setq extended-command-history '("comment-region" "color-theme-cyberpunk" "eval-buffer" "uncomment-region" "ffap" "eshell"))
(setq ido-buffer-history '("bin" "lch-web" "bi" "lch-el" "eli" "*me"))
(setq ido-file-history '("env" "lch-we" "lch-outline.el_archive" "lch-con" "lch-eli" "lch-bin" "lch-conf.el" "lch-ui.ell" "lch-conf" "lch-ui.el" "lch-bi" "lch-b" "lch-" "lch-ui" "lch-ut" "lch-elisp" "rc/" "lch-co" "lch-bing" "lch-binding.el_bak" "lch-binding.el_archive" "lch-ui-" ".emacs" "lch-elis" "rc" "el" "si" ".em" "drop" "lch-el"))
(setq regexp-search-ring '("web" "bind" "one-key" "and" "ch-inde" "let" "kbd" "util" "my-ho" "bi" "cod" "dired" "them" "swit" "one-" "f4"))
